@page "/mytodos"

@rendermode InteractiveServer

@attribute [Microsoft.AspNetCore.Authorization.Authorize(Policy = "AuthenticatedUser")]

@inject AuthenticationStateProvider _authenticationStateProvider;
@inject IServiceProvider _serviceProvider;
@inject Handlers.RoleHandler _roleHandler;

@inject AuthenticationStateProvider _authenticationStateProvider;
@inject Data.TodoDbContext _toDoContext;
@inject Handlers.HashingHandler _hashingHandler;
@inject IServiceProvider _serviceProvider;

<PageTitle>My Todos</PageTitle>

<h3 style="text-align:center;margin-top:10px;">Welcome <span style="font-weight:bold">@_userName</span> to your ToDos</h3>
<hr />

@if (_socialSecurityNumber == null)
{
    <div class="col-md-2" style="margin:0 auto;padding-left:20px; width:400px; text-align: center">
        <div style="font-weight:bold;">Please input your social security number: </div>
        <input type="text" @bind="_sSNUserInput" style="width:150px;margin:10px;" />
        <br />
        <button class="btn-primary" @onclick="btnSubmitCpr_clicked" style="width:150px;height:45px;margin:10px;">Submit</button>
        @if (_message != null)
        {
            <div>@_message</div>
        }
    </div>
}
else
{
    <div class="col-md-2" style="margin:0 auto;padding-left:20px;">
        <div style="font-weight:bold;margin-top:20px;">Indtast to-do item:</div>
        <input type="text" @bind="ToDoItem" style="width:150px;" />
        <br />
        <button class="btn-primary" @onclick="btnSubmitTodoItem_clicked" style="width:150px;height:45px;margin-top:4px;">Submit</button>
    </div>
}
<div style="margin-top:18px;">
    @if (TodoObj != null && TodoObj.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>My ToDo Items</th>
                </tr>
            </thead>
            <tbody>
                @if (TodoObj != null && TodoObj.Count > 0)
                {
                    @foreach (var item in TodoObj)
                    {
                        <tr>
                            <td>@item.Item</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <div>
            @if(_isAdmin)
            {
                <button class="btn-primary" @onclick="ClearItems" style="width:150px;height:45px;margin-top:4px;background-color:red;color:black">Clear ToDo List</button>
            }
        </div>
    }
</div>

@code {
    private bool _isAdmin;
    private string? _userName { get; set; }

    private string? _sSNUserInput { get; set; }
    private string? _socialSecurityNumber { get; set; }
    private string? _message { get; set; }

    private string? ToDoItem { get; set; }
    private List<TodoBlazorApp.Data.Models.Todo>? TodoObj { get; set; }

    protected override async Task OnInitializedAsync()
    {
        TodoObj = new List<TodoBlazorApp.Data.Models.Todo>();

        // Get Authentication State
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();

        // Get current user
        var user = authState.User;

        // Checks if user is ADMIN
        _isAdmin = user.IsInRole("ADMIN");

        // Set username
        _userName = user.Identity.Name;
    }

    private void btnSubmitCpr_clicked()
    {
        // Hash SSN
        string hashedSSN = _hashingHandler.CompleteHashing(_sSNUserInput);

        // Fetch user
        var matchedUser = _toDoContext.Users.FirstOrDefault(x => x.Name == _userName);

        // Create user with input if it doesnt already exist
        if (matchedUser == null)
        {
            var user = new TodoBlazorApp.Data.Models.User
                {
                    Name = _userName,
                    SocialSecurityNumber = hashedSSN
                };

            // Add User to DB
            _toDoContext.Users.Add(user);

            // Save DB Changes
            _toDoContext.SaveChanges();

            // Fetch user's SSN from DB
            _socialSecurityNumber = _toDoContext.Users.FirstOrDefault(x => x.Name == _userName)?.SocialSecurityNumber;
        }

        // Verify if user already exist / Fetch Todos
        else
        {
            // Check if User Input matches with User from DB
            bool valueMatch = _hashingHandler.CompleteHashingVerify(_sSNUserInput, matchedUser.SocialSecurityNumber);
            if (valueMatch)
            {
                // Fetch Todos from DB
                TodoObj = _toDoContext.Todos.Where(x => x.UserId == matchedUser.Id).ToList();
                // Fetch User's SSN from DB
                _socialSecurityNumber = _toDoContext.Users.FirstOrDefault(x => x.Name == _userName)?.SocialSecurityNumber;

                // Set message to null since success
                _message = null;
            }
            else
            {
                // Set error message
                _message = "Your social security number is wrong!";
            }
        }
    }

    private void btnSubmitTodoItem_clicked()
    {
        // Fetch user id from database
        var UserId = _toDoContext.Users.FirstOrDefault(x => x.Name == _userName).Id;

        // Create todo from userinput
        var todo = new TodoBlazorApp.Data.Models.Todo
            {
                UserId = UserId,
                Item = ToDoItem
            };

        // Add todo to DB
        _toDoContext.Todos.Add(todo);

        // Save changes to DB
        _toDoContext.SaveChanges();

        // Refetch Todos from DB
        TodoObj = _toDoContext.Todos.Where(x => x.UserId == UserId).ToList();
    }

    private void ClearItems()
    {
        // Verity that user is admin
        if (_isAdmin)
        {
            // Fetch user id from database
            var UserId = _toDoContext.Users.FirstOrDefault(x => x.Name == _userName).Id;

            // Fetch todo items from user and delete them one by one and then save the changes to the DB
            var items = _toDoContext.Todos.Where(a => a.UserId == UserId).ToList();
            foreach (var item in items)
                _toDoContext.Todos.Remove(item);
            _toDoContext.SaveChanges();

            // Refetch Todo Items
            TodoObj = _toDoContext.Todos.Where(x => x.UserId == UserId).ToList();
        }
    }
}
